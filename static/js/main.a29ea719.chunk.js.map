{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/marketplace/AddLand.js","components/marketplace/Land.js","components/utils/Loader.js","utils/marketplace.js","components/marketplace/Lands.js","components/utils/Cover.js","assets/img/land.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","AddLand","save","useState","name","setName","image","setImage","description","setDescription","setLocation","startingPrice","setStartingPrice","instantPrice","setInstantPrice","endAt","setEndAt","show","setShow","handleClose","Button","style","width","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","height","Footer","disabled","Land","land","buy","bid","endAuction","sold","owner","currentBid","bidder","newBid","setNewBid","endsInHours","Math","ceil","Date","Col","Card","Badge","bg","src","alt","objectFit","Text","utils","format","Group","Label","Loader","role","GAS","buyLand","landId","parseNearAmount","Lands","lands","setLands","loading","setLoading","getLands","useCallback","console","log","error","addLand","data","uuid4","String","setLand","then","resp","toast","bidOnLand","endLandAuction","useEffect","Row","xs","sm","lg","map","_land","Cover","coverImg","background","minHeight","maxWidth","App","balance","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.a29ea719.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"landspace.fktest.testnet\"; // put here a smart contracts' name\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case \"mainnet\":\r\n      return {\r\n        networkId: \"mainnet\",\r\n        nodeUrl: \"https://rpc.mainnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.near.org\",\r\n        helperUrl: \"https://helper.mainnet.near.org\",\r\n        explorerUrl: \"https://explorer.mainnet.near.org\",\r\n      };\r\n    case \"testnet\":\r\n      return {\r\n        networkId: \"testnet\",\r\n        nodeUrl: \"https://rpc.testnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.testnet.near.org\",\r\n        helperUrl: \"https://helper.testnet.near.org\",\r\n        explorerUrl: \"https://explorer.testnet.near.org\",\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;\r\n","import environment from \"./config\";\r\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\r\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst nearEnv = environment(\"testnet\");\r\n\r\nexport async function initializeContract() {\r\n  const near = await connect(\r\n    Object.assign(\r\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n      nearEnv\r\n    )\r\n  );\r\n  window.walletConnection = new WalletConnection(near);\r\n  window.accountId = window.walletConnection.getAccountId();\r\n  window.contract = new Contract(\r\n    window.walletConnection.account(),\r\n    nearEnv.contractName,\r\n    {\r\n      // List here all view methods\r\n      viewMethods: [\"getLand\", \"getLands\"],\r\n      // List call methods that change state\r\n      changeMethods: [\"buyLand\", \"setLand\", \"bid\", \"endAuction\"],\r\n    }\r\n  );\r\n}\r\n\r\nexport async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,\r\n    2\r\n  );\r\n}\r\n\r\nexport async function getAccountId() {\r\n  return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst AddLand = ({ save }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [startingPrice, setStartingPrice] = useState(0);\r\n  const [instantPrice, setInstantPrice] = useState(0);\r\n  const [endAt, setEndAt] = useState(0);\r\n\t\r\n\r\n  const isFormFilled = () => name && image && description && location && startingPrice > 0 && instantPrice > 0 && endAt > 0;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        className=\"rounded-pill px-0\"\r\n        style={{ width: \"38px\" }}\r\n      >\r\n        <i className=\"bi bi-plus\"></i>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Land</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputName\"\r\n              label=\"Land/Home name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Enter name of land/home\"\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputUrl\"\r\n              label=\"Image URL\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Image URL\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"Location\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Location\"\r\n                onChange={(e) => {\r\n                  setLocation(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputInstantPrice\"\r\n              label=\"Instant Price\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Instant price\"\r\n                onChange={(e) => {\r\n                  setInstantPrice(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputStartingPrice\"\r\n              label=\"Starting Price\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Starting price\"\r\n                onChange={(e) => {\r\n                  setStartingPrice(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputendAt\"\r\n              label=\"Auction Duration(in days)\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Auction duration\"\r\n                onChange={(e) => {\r\n                  setEndAt(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                name,\r\n                image,\r\n                description,\r\n                location,\r\n                instantPrice,\r\n                startingPrice,\r\n                endAt\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save Land\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddLand.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddLand;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { utils } from \"near-api-js\";\r\nimport { Card, Button, Col, Badge, Stack, Form } from \"react-bootstrap\";\r\n\r\nconst Land = ({ land, buy, bid, accountId, endAuction }) => {\r\n\tconst {\r\n\t\tid,\r\n\t\tname,\r\n\t\tdescription,\r\n\t\tsold,\r\n\t\tlocation,\r\n\t\timage,\r\n\t\towner,\r\n\t\tendAt,\r\n\t\tstartingPrice,\r\n\t\tinstantPrice,\r\n\t\tcurrentBid,\r\n\t\tbidder,\r\n\t} = land;\r\n\r\n\tconst [newBid, setNewBid] = useState(0);\r\n\tconst triggerBuy = () => {\r\n\t\tbuy(id, instantPrice);\r\n\t};\r\n\tconst triggerBid = () => {\r\n\t\tbid(id, newBid);\r\n\t};\r\n\r\n\tconst triggerEndAuction = () => {\r\n\t\tendAuction(id);\r\n\t}\r\n\t// endAt is converted into milliseconds then divided into seconds into hours\r\n\tconst endsInHours = Math.ceil(((endAt / 1000000) - new Date()) / 1000 / 3600) ;\r\n\r\n\treturn (\r\n\t\t<Col key={id}>\r\n\t\t\t<Card className=\" h-100\">\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<Stack direction=\"horizontal\" gap={2}>\r\n\t\t\t\t\t\t<span className=\"font-monospace text-secondary\">\r\n\t\t\t\t\t\t\t{owner}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<Badge bg=\"secondary\" className=\"ms-auto\">\r\n\t\t\t\t\t\t\t{sold ? \"Not Available\" : \"Available\"}\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<div className=\" ratio ratio-4x3\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\talt={name}\r\n\t\t\t\t\t\tstyle={{ objectFit: \"cover\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Card.Body className=\"d-flex  flex-column text-center\">\r\n\t\t\t\t\t<Card.Title>{name}</Card.Title>\r\n\t\t\t\t\t<Card.Text className=\"flex-grow-1 \">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<Card.Text className=\"text-secondary\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tstartingPrice is{\" \"}\r\n\t\t\t\t\t\t\t{utils.format.formatNearAmount(startingPrice)} NEAR\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<i className=\"bi bi-geo-alt-fill\">{location}</i>\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t{!sold && new Date() < endAt && accountId !== owner ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"BidAmount\">\r\n\t\t\t\t\t\t\t\t<Form.Label>\r\n\t\t\t\t\t\t\t\t\tEnter Bid(current bid is{\" \"}\r\n\t\t\t\t\t\t\t\t\t{utils.format.formatNearAmount(currentBid)}{\" \"}\r\n\t\t\t\t\t\t\t\t\tNEAR) by {bidder}\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter bid amount\"\r\n\t\t\t\t\t\t\t\t\tvalue={newBid}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setNewBid(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\t\t\t\t\t\tonClick={triggerBid}\r\n\t\t\t\t\t\t\t\t\tclassName=\"mt-2 px-5\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tBid(ends in {endsInHours}hours)\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\t\t\t\tonClick={triggerBuy}\r\n\t\t\t\t\t\t\t\tclassName=\"w-100 py-3\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBuy Instantly for{\" \"}\r\n\t\t\t\t\t\t\t\t{utils.format.formatNearAmount(instantPrice)}{\" \"}\r\n\t\t\t\t\t\t\t\tNEAR\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{accountId === owner && !sold? (\r\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={triggerEndAuction}>End Auction</Button>\r\n\t\t\t\t\t): \"\"}\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nLand.propTypes = {\r\n\tland: PropTypes.instanceOf(Object).isRequired,\r\n\tbuy: PropTypes.func.isRequired,\r\n\tbid: PropTypes.func.isRequired,\r\n\tendAuction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Land;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { v4 as uuid4 } from \"uuid\";\r\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst GAS = 100000000000000;\r\n//block.timestamp is recorded in nanoseconds for NEAR\r\nconst nanosecond = 1000000000;\r\nexport function createLand(land) {\r\n  land.id = uuid4();\r\n  land.endAt = String(land.endAt * 60 * nanosecond); \r\n  land.startingPrice = parseNearAmount(land.startingPrice + \"\");\r\n  land.instantPrice = parseNearAmount(land.instantPrice + \"\");\r\n  land.currentBid = parseNearAmount(0 + \"\");\r\n  return window.contract.setLand({ land });\r\n}\r\n\r\nexport function getLands() {\r\n  return window.contract.getLands();\r\n}\r\n\r\nexport async function buyLand({ id, instantPrice }) {\r\n  await window.contract.buyLand({ landId: id }, GAS, instantPrice);\r\n}\r\n\r\nexport async function bid({ id, newBid }) {\r\n  newBid = parseNearAmount(newBid + \"\");\r\n  await window.contract.bid({ landId: id, newBid }, GAS, newBid);\r\n}\r\n\r\n\r\nexport async function endAuction({ id }) {\r\n  await window.contract.endAuction({ landId: id}, GAS);\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddLand from \"./AddLand\";\r\nimport Land from \"./Land\";\r\nimport Loader from \"../utils/Loader\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nimport { NotificationSuccess, NotificationError } from \"../utils/Notifications\";\r\nimport {\r\n\tgetLands as getLandList,\r\n\tbuyLand,\r\n\tbid,\r\n\tcreateLand,\r\n\tendAuction,\r\n} from \"../../utils/marketplace\";\r\n\r\nconst Lands = ({accountId}) => {\r\n\tconst [lands, setLands] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\t// function to get the list of lands\r\n\tconst getLands = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetLands(await getLandList());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log({ error });\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst addLand = async (data) => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tcreateLand(data).then((resp) => {\r\n\t\t\t\tgetLands();\r\n\t\t\t});\r\n\t\t\ttoast(<NotificationSuccess text=\"Land added successfully.\" />);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log({ error });\r\n\t\t\ttoast(<NotificationError text=\"Failed to create a land.\" />);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t//  function to buy a land\r\n\tconst buy = async (id, instantPrice) => {\r\n\t\ttry {\r\n\t\t\tawait buyLand({\r\n\t\t\t\tid,\r\n\t\t\t\tinstantPrice,\r\n\t\t\t}).then((resp) => getLands());\r\n\t\t\ttoast(<NotificationSuccess text=\"Land has been bought successfully\" />);\r\n\t\t} catch (error) {\r\n\t\t\ttoast(<NotificationError text=\"Failed to purchase land.\" />);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t//  function to bid on a land\r\n\tconst bidOnLand = async (id, newBid) => {\r\n\t\ttry {\r\n\t\t\tawait bid({\r\n\t\t\t\tid,\r\n\t\t\t\tnewBid,\r\n\t\t\t}).then((resp) => getLands());\r\n\t\t\ttoast(<NotificationSuccess text=\"You successfully bid on land\" />);\r\n\t\t} catch (error) {\r\n\t\t\ttoast(<NotificationError text=\"You have failed to bid on land\" />);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t//  function to end the auction of a land\r\n\tconst endLandAuction = async (id) => {\r\n\t\ttry {\r\n\t\t\tawait endAuction({\r\n\t\t\t\tid,\r\n\t\t\t}).then((resp) => getLands());\r\n\t\t\ttoast(<NotificationSuccess text=\"You have successfully ended the auction\" />);\r\n\t\t} catch (error) {\r\n\t\t\ttoast(<NotificationError text=\"You have failed to end the auction\" />);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLands();\r\n\t}, [getLands]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!loading ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n\t\t\t\t\t\t<h1 className=\"fs-4 fw-bold mb-0\">LandSpace</h1>\r\n\t\t\t\t\t\t<AddLand save={addLand} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\txs={1}\r\n\t\t\t\t\t\tsm={2}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"g-3  mb-5 g-xl-4 g-xxl-5\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{lands.map((_land) => (\r\n\t\t\t\t\t\t\t<Land\r\n\t\t\t\t\t\t\t\tland={{\r\n\t\t\t\t\t\t\t\t\t..._land,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbuy={buy}\r\n\t\t\t\t\t\t\t\tbid={bidOnLand}\r\n\t\t\t\t\t\t\t\tendAuction={endLandAuction}\r\n\t\t\t\t\t\t\t\taccountId={accountId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loader />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Lands;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;\r\n","export default __webpack_public_path__ + \"static/media/land.4e9ce84c.jpg\";","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport { Notification } from \"./components/utils/Notifications\";\r\nimport Lands from \"./components/marketplace/Lands\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport coverImg from \"./assets/img/land.jpg\";\r\nimport \"./App.css\";\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n\r\n  const [balance, setBalance] = useState(\"0\");\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  }, [account.accountId]);\r\n\r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <main>\r\n            <Lands accountId={account.accountId} />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        <Cover name=\"LandSpace\" login={login} coverImg={coverImg} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeContract } from \"./utils/near\";\r\n\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nwindow.nearInitPromise = initializeContract()\r\n  .then(() => {\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  })\r\n  .catch(console.error);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}